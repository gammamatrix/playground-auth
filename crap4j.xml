<?xml version="1.0" encoding="UTF-8"?>
<crap_result>
  <project/>
  <timestamp>2024-03-14 05:05:58</timestamp>
  <stats>
    <name>Method Crap Stats</name>
    <methodCount>64</methodCount>
    <crapMethodCount>10</crapMethodCount>
    <crapLoad>166</crapLoad>
    <totalCrap>4718.19</totalCrap>
    <crapMethodPercent>15.63</crapMethodPercent>
  </stats>
  <methods>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Can</className>
      <methodName>matches</methodName>
      <methodSignature>matches(?Illuminate\Contracts\Auth\Authenticatable $user): bool</methodSignature>
      <fullMethod>matches(?Illuminate\Contracts\Auth\Authenticatable $user): bool</fullMethod>
      <crap>72</crap>
      <complexity>8</complexity>
      <coverage>0</coverage>
      <crapLoad>8</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Can</className>
      <methodName>init</methodName>
      <methodSignature>init(?Illuminate\Contracts\Auth\Authenticatable $user): self</methodSignature>
      <fullMethod>init(?Illuminate\Contracts\Auth\Authenticatable $user): self</fullMethod>
      <crap>210</crap>
      <complexity>14</complexity>
      <coverage>0</coverage>
      <crapLoad>14</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Can</className>
      <methodName>reset</methodName>
      <methodSignature>reset(?Illuminate\Contracts\Auth\Authenticatable $user): self</methodSignature>
      <fullMethod>reset(?Illuminate\Contracts\Auth\Authenticatable $user): self</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Can</className>
      <methodName>isGuest</methodName>
      <methodSignature>isGuest(?Illuminate\Contracts\Auth\Authenticatable $user): bool</methodSignature>
      <fullMethod>isGuest(?Illuminate\Contracts\Auth\Authenticatable $user): bool</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Can</className>
      <methodName>map</methodName>
      <methodSignature>map(array $privileges, ?Illuminate\Contracts\Auth\Authenticatable $user): array</methodSignature>
      <fullMethod>map(array $privileges, ?Illuminate\Contracts\Auth\Authenticatable $user): array</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Can</className>
      <methodName>wildcards</methodName>
      <methodSignature>wildcards(string $privilege): array</methodSignature>
      <fullMethod>wildcards(string $privilege): array</fullMethod>
      <crap>110</crap>
      <complexity>10</complexity>
      <coverage>0</coverage>
      <crapLoad>10</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Can</className>
      <methodName>access</methodName>
      <methodSignature>access(?Illuminate\Contracts\Auth\Authenticatable $user, array $options): Playground\Auth\Permission</methodSignature>
      <fullMethod>access(?Illuminate\Contracts\Auth\Authenticatable $user, array $options): Playground\Auth\Permission</fullMethod>
      <crap>2450</crap>
      <complexity>49</complexity>
      <coverage>0</coverage>
      <crapLoad>50</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Can</className>
      <methodName>withPrivilege</methodName>
      <methodSignature>withPrivilege(array $meta): string</methodSignature>
      <fullMethod>withPrivilege(array $meta): string</fullMethod>
      <crap>42</crap>
      <complexity>6</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Console\Commands</package>
      <className>Playground\Auth\Console\Commands\HashPassword</className>
      <methodName>handle</methodName>
      <methodSignature>handle()</methodSignature>
      <fullMethod>handle()</fullMethod>
      <crap>9.02</crap>
      <complexity>9</complexity>
      <coverage>93.75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Facades</package>
      <className>Playground\Auth\Facades\Can</className>
      <methodName>getFacadeAccessor</methodName>
      <methodSignature>getFacadeAccessor()</methodSignature>
      <fullMethod>getFacadeAccessor()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Issuer</className>
      <methodName>useSanctum</methodName>
      <methodSignature>useSanctum(): bool</methodSignature>
      <fullMethod>useSanctum(): bool</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Issuer</className>
      <methodName>compileAbilitiesByGroup</methodName>
      <methodSignature>compileAbilitiesByGroup(string $group): array</methodSignature>
      <fullMethod>compileAbilitiesByGroup(string $group): array</fullMethod>
      <crap>812</crap>
      <complexity>28</complexity>
      <coverage>0</coverage>
      <crapLoad>29</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Issuer</className>
      <methodName>abilitiesByGroup</methodName>
      <methodSignature>abilitiesByGroup(string $group): array</methodSignature>
      <fullMethod>abilitiesByGroup(string $group): array</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Issuer</className>
      <methodName>abilities</methodName>
      <methodSignature>abilities(Illuminate\Contracts\Auth\Authenticatable $user): array</methodSignature>
      <fullMethod>abilities(Illuminate\Contracts\Auth\Authenticatable $user): array</fullMethod>
      <crap>156</crap>
      <complexity>12</complexity>
      <coverage>0</coverage>
      <crapLoad>12</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Issuer</className>
      <methodName>init</methodName>
      <methodSignature>init(Illuminate\Contracts\Auth\Authenticatable $user): self</methodSignature>
      <fullMethod>init(Illuminate\Contracts\Auth\Authenticatable $user): self</fullMethod>
      <crap>462</crap>
      <complexity>21</complexity>
      <coverage>0</coverage>
      <crapLoad>21</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Issuer</className>
      <methodName>listed</methodName>
      <methodSignature>listed(Illuminate\Contracts\Auth\Authenticatable $user): void</methodSignature>
      <fullMethod>listed(Illuminate\Contracts\Auth\Authenticatable $user): void</fullMethod>
      <crap>56</crap>
      <complexity>7</complexity>
      <coverage>0</coverage>
      <crapLoad>7</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Issuer</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize(Illuminate\Contracts\Auth\Authenticatable $user): array</methodSignature>
      <fullMethod>authorize(Illuminate\Contracts\Auth\Authenticatable $user): array</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Issuer</className>
      <methodName>sanctum</methodName>
      <methodSignature>sanctum(Illuminate\Contracts\Auth\Authenticatable $user): array</methodSignature>
      <fullMethod>sanctum(Illuminate\Contracts\Auth\Authenticatable $user): array</fullMethod>
      <crap>56</crap>
      <complexity>7</complexity>
      <coverage>0</coverage>
      <crapLoad>7</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Permission</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(string $verify)</methodSignature>
      <fullMethod>__construct(string $verify)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Permission</className>
      <methodName>markAllowed</methodName>
      <methodSignature>markAllowed(): self</methodSignature>
      <fullMethod>markAllowed(): self</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Permission</className>
      <methodName>markIsGuest</methodName>
      <methodSignature>markIsGuest(): self</methodSignature>
      <fullMethod>markIsGuest(): self</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Permission</className>
      <methodName>allowed</methodName>
      <methodSignature>allowed(): bool</methodSignature>
      <fullMethod>allowed(): bool</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Permission</className>
      <methodName>isGuest</methodName>
      <methodSignature>isGuest(): bool</methodSignature>
      <fullMethod>isGuest(): bool</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>create</methodName>
      <methodSignature>create(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>create(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>delete</methodName>
      <methodSignature>delete(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>delete(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>detail</methodName>
      <methodSignature>detail(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>detail(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>edit</methodName>
      <methodSignature>edit(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>edit(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>forceDelete</methodName>
      <methodSignature>forceDelete(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>forceDelete(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>lock</methodName>
      <methodSignature>lock(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>lock(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>manage</methodName>
      <methodSignature>manage(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>manage(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>restore</methodName>
      <methodSignature>restore(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>restore(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>store</methodName>
      <methodSignature>store(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>store(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>update</methodName>
      <methodSignature>update(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>update(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>unlock</methodName>
      <methodSignature>unlock(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>unlock(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\Policy</className>
      <methodName>before</methodName>
      <methodSignature>before(Illuminate\Contracts\Auth\Authenticatable $user, $ability)</methodSignature>
      <fullMethod>before(Illuminate\Contracts\Auth\Authenticatable $user, $ability)</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\Policy</className>
      <methodName>index</methodName>
      <methodSignature>index(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>index(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\Policy</className>
      <methodName>view</methodName>
      <methodSignature>view(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>view(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>hasPrivilege</methodName>
      <methodSignature>hasPrivilege(Illuminate\Contracts\Auth\Authenticatable $user, string $privilege): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>hasPrivilege(Illuminate\Contracts\Auth\Authenticatable $user, string $privilege): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>hasRole</methodName>
      <methodSignature>hasRole(Illuminate\Contracts\Auth\Authenticatable $user, string $ability): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>hasRole(Illuminate\Contracts\Auth\Authenticatable $user, string $ability): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>privilege</methodName>
      <methodSignature>privilege(string $ability): string</methodSignature>
      <fullMethod>privilege(string $ability): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>getEntity</methodName>
      <methodSignature>getEntity(): string</methodSignature>
      <fullMethod>getEntity(): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>getPackage</methodName>
      <methodSignature>getPackage(): string</methodSignature>
      <fullMethod>getPackage(): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>hasToken</methodName>
      <methodSignature>hasToken(): bool</methodSignature>
      <fullMethod>hasToken(): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>getToken</methodName>
      <methodSignature>getToken(): ?Laravel\Sanctum\PersonalAccessToken</methodSignature>
      <fullMethod>getToken(): ?Laravel\Sanctum\PersonalAccessToken</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>setToken</methodName>
      <methodSignature>setToken(Laravel\Sanctum\PersonalAccessToken $token): self</methodSignature>
      <fullMethod>setToken(Laravel\Sanctum\PersonalAccessToken $token): self</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>verify</methodName>
      <methodSignature>verify(Illuminate\Contracts\Auth\Authenticatable $user, string $ability): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>verify(Illuminate\Contracts\Auth\Authenticatable $user, string $ability): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>8.01</crap>
      <complexity>8</complexity>
      <coverage>94.12</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>getPackage</methodName>
      <methodSignature>getPackage(): string</methodSignature>
      <fullMethod>getPackage(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>getEntity</methodName>
      <methodSignature>getEntity(): string</methodSignature>
      <fullMethod>getEntity(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>getToken</methodName>
      <methodSignature>getToken(): ?Laravel\Sanctum\PersonalAccessToken</methodSignature>
      <fullMethod>getToken(): ?Laravel\Sanctum\PersonalAccessToken</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>hasToken</methodName>
      <methodSignature>hasToken(): bool</methodSignature>
      <fullMethod>hasToken(): bool</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>setToken</methodName>
      <methodSignature>setToken(Laravel\Sanctum\PersonalAccessToken $token): self</methodSignature>
      <fullMethod>setToken(Laravel\Sanctum\PersonalAccessToken $token): self</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>privilege</methodName>
      <methodSignature>privilege(string $ability): string</methodSignature>
      <fullMethod>privilege(string $ability): string</fullMethod>
      <crap>6</crap>
      <complexity>6</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>hasPrivilegeWildcard</methodName>
      <methodSignature>hasPrivilegeWildcard(string $privilege): bool</methodSignature>
      <fullMethod>hasPrivilegeWildcard(string $privilege): bool</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>hasPrivilege</methodName>
      <methodSignature>hasPrivilege(Illuminate\Contracts\Auth\Authenticatable $user, string $privilege): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>hasPrivilege(Illuminate\Contracts\Auth\Authenticatable $user, string $privilege): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>10.05</crap>
      <complexity>10</complexity>
      <coverage>92.31</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>hasPrivilegeSanctum</methodName>
      <methodSignature>hasPrivilegeSanctum(Laravel\Sanctum\Contracts\HasApiTokens $user, string $privilege): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>hasPrivilegeSanctum(Laravel\Sanctum\Contracts\HasApiTokens $user, string $privilege): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>56</crap>
      <complexity>7</complexity>
      <coverage>0</coverage>
      <crapLoad>7</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\RoleTrait</className>
      <methodName>getRolesForAdmin</methodName>
      <methodSignature>getRolesForAdmin(): array</methodSignature>
      <fullMethod>getRolesForAdmin(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\RoleTrait</className>
      <methodName>getRolesForAction</methodName>
      <methodSignature>getRolesForAction(): array</methodSignature>
      <fullMethod>getRolesForAction(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\RoleTrait</className>
      <methodName>isRoot</methodName>
      <methodSignature>isRoot(Illuminate\Contracts\Auth\Authenticatable $user): bool</methodSignature>
      <fullMethod>isRoot(Illuminate\Contracts\Auth\Authenticatable $user): bool</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\RoleTrait</className>
      <methodName>getRolesToView</methodName>
      <methodSignature>getRolesToView(): array</methodSignature>
      <fullMethod>getRolesToView(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\RoleTrait</className>
      <methodName>hasRole</methodName>
      <methodSignature>hasRole(Illuminate\Contracts\Auth\Authenticatable $user, string $ability): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>hasRole(Illuminate\Contracts\Auth\Authenticatable $user, string $ability): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>18</crap>
      <complexity>18</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\ServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot()</methodSignature>
      <fullMethod>boot()</fullMethod>
      <crap>6</crap>
      <complexity>6</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\ServiceProvider</className>
      <methodName>register</methodName>
      <methodSignature>register(): void</methodSignature>
      <fullMethod>register(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>85.71</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\ServiceProvider</className>
      <methodName>about</methodName>
      <methodSignature>about(): void</methodSignature>
      <fullMethod>about(): void</fullMethod>
      <crap>47.11</crap>
      <complexity>46</complexity>
      <coverage>91.94</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\ServiceProvider</className>
      <methodName>version</methodName>
      <methodSignature>version(): string</methodSignature>
      <fullMethod>version(): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
  </methods>
</crap_result>
